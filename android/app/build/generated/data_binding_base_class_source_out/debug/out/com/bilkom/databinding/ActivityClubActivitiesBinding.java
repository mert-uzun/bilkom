// Generated by view binder compiler. Do not edit!
package com.bilkom.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bilkom.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityClubActivitiesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button addClubActivityButton;

  @NonNull
  public final RecyclerView clubActivitiesRecyclerView;

  @NonNull
  public final Spinner clubSpinner;

  @NonNull
  public final Button myActivitiesButton;

  @NonNull
  public final Button myClubsButton;

  private ActivityClubActivitiesBinding(@NonNull LinearLayout rootView,
      @NonNull Button addClubActivityButton, @NonNull RecyclerView clubActivitiesRecyclerView,
      @NonNull Spinner clubSpinner, @NonNull Button myActivitiesButton,
      @NonNull Button myClubsButton) {
    this.rootView = rootView;
    this.addClubActivityButton = addClubActivityButton;
    this.clubActivitiesRecyclerView = clubActivitiesRecyclerView;
    this.clubSpinner = clubSpinner;
    this.myActivitiesButton = myActivitiesButton;
    this.myClubsButton = myClubsButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityClubActivitiesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityClubActivitiesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_club_activities, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityClubActivitiesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addClubActivityButton;
      Button addClubActivityButton = ViewBindings.findChildViewById(rootView, id);
      if (addClubActivityButton == null) {
        break missingId;
      }

      id = R.id.clubActivitiesRecyclerView;
      RecyclerView clubActivitiesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (clubActivitiesRecyclerView == null) {
        break missingId;
      }

      id = R.id.clubSpinner;
      Spinner clubSpinner = ViewBindings.findChildViewById(rootView, id);
      if (clubSpinner == null) {
        break missingId;
      }

      id = R.id.myActivitiesButton;
      Button myActivitiesButton = ViewBindings.findChildViewById(rootView, id);
      if (myActivitiesButton == null) {
        break missingId;
      }

      id = R.id.myClubsButton;
      Button myClubsButton = ViewBindings.findChildViewById(rootView, id);
      if (myClubsButton == null) {
        break missingId;
      }

      return new ActivityClubActivitiesBinding((LinearLayout) rootView, addClubActivityButton,
          clubActivitiesRecyclerView, clubSpinner, myActivitiesButton, myClubsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
