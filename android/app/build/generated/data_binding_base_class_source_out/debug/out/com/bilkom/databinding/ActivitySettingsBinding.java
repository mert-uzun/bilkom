// Generated by view binder compiler. Do not edit!
package com.bilkom.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bilkom.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton changeProfilePicButton;

  @NonNull
  public final EditText confirmPasswordEdit;

  @NonNull
  public final EditText emailEditText;

  @NonNull
  public final MaterialButton logoutButton;

  @NonNull
  public final Button manageClubsButton;

  @NonNull
  public final EditText nameEditText;

  @NonNull
  public final EditText newPasswordEdit;

  @NonNull
  public final ImageView profileImageView;

  @NonNull
  public final LinearLayout settingsContainer;

  @NonNull
  public final TextView settingsTitle;

  @NonNull
  public final MaterialButton updatePasswordButton;

  @NonNull
  public final Button updateProfileButton;

  private ActivitySettingsBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton changeProfilePicButton, @NonNull EditText confirmPasswordEdit,
      @NonNull EditText emailEditText, @NonNull MaterialButton logoutButton,
      @NonNull Button manageClubsButton, @NonNull EditText nameEditText,
      @NonNull EditText newPasswordEdit, @NonNull ImageView profileImageView,
      @NonNull LinearLayout settingsContainer, @NonNull TextView settingsTitle,
      @NonNull MaterialButton updatePasswordButton, @NonNull Button updateProfileButton) {
    this.rootView = rootView;
    this.changeProfilePicButton = changeProfilePicButton;
    this.confirmPasswordEdit = confirmPasswordEdit;
    this.emailEditText = emailEditText;
    this.logoutButton = logoutButton;
    this.manageClubsButton = manageClubsButton;
    this.nameEditText = nameEditText;
    this.newPasswordEdit = newPasswordEdit;
    this.profileImageView = profileImageView;
    this.settingsContainer = settingsContainer;
    this.settingsTitle = settingsTitle;
    this.updatePasswordButton = updatePasswordButton;
    this.updateProfileButton = updateProfileButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changeProfilePicButton;
      MaterialButton changeProfilePicButton = ViewBindings.findChildViewById(rootView, id);
      if (changeProfilePicButton == null) {
        break missingId;
      }

      id = R.id.confirmPasswordEdit;
      EditText confirmPasswordEdit = ViewBindings.findChildViewById(rootView, id);
      if (confirmPasswordEdit == null) {
        break missingId;
      }

      id = R.id.emailEditText;
      EditText emailEditText = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText == null) {
        break missingId;
      }

      id = R.id.logoutButton;
      MaterialButton logoutButton = ViewBindings.findChildViewById(rootView, id);
      if (logoutButton == null) {
        break missingId;
      }

      id = R.id.manageClubsButton;
      Button manageClubsButton = ViewBindings.findChildViewById(rootView, id);
      if (manageClubsButton == null) {
        break missingId;
      }

      id = R.id.nameEditText;
      EditText nameEditText = ViewBindings.findChildViewById(rootView, id);
      if (nameEditText == null) {
        break missingId;
      }

      id = R.id.newPasswordEdit;
      EditText newPasswordEdit = ViewBindings.findChildViewById(rootView, id);
      if (newPasswordEdit == null) {
        break missingId;
      }

      id = R.id.profileImageView;
      ImageView profileImageView = ViewBindings.findChildViewById(rootView, id);
      if (profileImageView == null) {
        break missingId;
      }

      id = R.id.settingsContainer;
      LinearLayout settingsContainer = ViewBindings.findChildViewById(rootView, id);
      if (settingsContainer == null) {
        break missingId;
      }

      id = R.id.settingsTitle;
      TextView settingsTitle = ViewBindings.findChildViewById(rootView, id);
      if (settingsTitle == null) {
        break missingId;
      }

      id = R.id.updatePasswordButton;
      MaterialButton updatePasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (updatePasswordButton == null) {
        break missingId;
      }

      id = R.id.updateProfileButton;
      Button updateProfileButton = ViewBindings.findChildViewById(rootView, id);
      if (updateProfileButton == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ScrollView) rootView, changeProfilePicButton,
          confirmPasswordEdit, emailEditText, logoutButton, manageClubsButton, nameEditText,
          newPasswordEdit, profileImageView, settingsContainer, settingsTitle, updatePasswordButton,
          updateProfileButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
