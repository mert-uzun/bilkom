// Generated by view binder compiler. Do not edit!
package com.bilkom.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bilkom.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreateEventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout createEventRoot;

  @NonNull
  public final TextInputEditText eventDateEdit;

  @NonNull
  public final TextInputEditText eventDescriptionEdit;

  @NonNull
  public final TextInputEditText eventLocationEdit;

  @NonNull
  public final TextInputEditText eventNameEdit;

  @NonNull
  public final TextInputEditText maxParticipantsEdit;

  @NonNull
  public final MaterialButton submitEventButton;

  @NonNull
  public final LinearLayout tagsContainer;

  @NonNull
  public final TextInputLayout tilEventDate;

  @NonNull
  public final TextInputLayout tilEventDescription;

  @NonNull
  public final TextInputLayout tilEventLocation;

  @NonNull
  public final TextInputLayout tilEventName;

  @NonNull
  public final TextInputLayout tilMaxParticipants;

  private ActivityCreateEventBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout createEventRoot, @NonNull TextInputEditText eventDateEdit,
      @NonNull TextInputEditText eventDescriptionEdit, @NonNull TextInputEditText eventLocationEdit,
      @NonNull TextInputEditText eventNameEdit, @NonNull TextInputEditText maxParticipantsEdit,
      @NonNull MaterialButton submitEventButton, @NonNull LinearLayout tagsContainer,
      @NonNull TextInputLayout tilEventDate, @NonNull TextInputLayout tilEventDescription,
      @NonNull TextInputLayout tilEventLocation, @NonNull TextInputLayout tilEventName,
      @NonNull TextInputLayout tilMaxParticipants) {
    this.rootView = rootView;
    this.createEventRoot = createEventRoot;
    this.eventDateEdit = eventDateEdit;
    this.eventDescriptionEdit = eventDescriptionEdit;
    this.eventLocationEdit = eventLocationEdit;
    this.eventNameEdit = eventNameEdit;
    this.maxParticipantsEdit = maxParticipantsEdit;
    this.submitEventButton = submitEventButton;
    this.tagsContainer = tagsContainer;
    this.tilEventDate = tilEventDate;
    this.tilEventDescription = tilEventDescription;
    this.tilEventLocation = tilEventLocation;
    this.tilEventName = tilEventName;
    this.tilMaxParticipants = tilMaxParticipants;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreateEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreateEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreateEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout createEventRoot = (ConstraintLayout) rootView;

      id = R.id.eventDateEdit;
      TextInputEditText eventDateEdit = ViewBindings.findChildViewById(rootView, id);
      if (eventDateEdit == null) {
        break missingId;
      }

      id = R.id.eventDescriptionEdit;
      TextInputEditText eventDescriptionEdit = ViewBindings.findChildViewById(rootView, id);
      if (eventDescriptionEdit == null) {
        break missingId;
      }

      id = R.id.eventLocationEdit;
      TextInputEditText eventLocationEdit = ViewBindings.findChildViewById(rootView, id);
      if (eventLocationEdit == null) {
        break missingId;
      }

      id = R.id.eventNameEdit;
      TextInputEditText eventNameEdit = ViewBindings.findChildViewById(rootView, id);
      if (eventNameEdit == null) {
        break missingId;
      }

      id = R.id.maxParticipantsEdit;
      TextInputEditText maxParticipantsEdit = ViewBindings.findChildViewById(rootView, id);
      if (maxParticipantsEdit == null) {
        break missingId;
      }

      id = R.id.submitEventButton;
      MaterialButton submitEventButton = ViewBindings.findChildViewById(rootView, id);
      if (submitEventButton == null) {
        break missingId;
      }

      id = R.id.tagsContainer;
      LinearLayout tagsContainer = ViewBindings.findChildViewById(rootView, id);
      if (tagsContainer == null) {
        break missingId;
      }

      id = R.id.til_event_date;
      TextInputLayout tilEventDate = ViewBindings.findChildViewById(rootView, id);
      if (tilEventDate == null) {
        break missingId;
      }

      id = R.id.til_event_description;
      TextInputLayout tilEventDescription = ViewBindings.findChildViewById(rootView, id);
      if (tilEventDescription == null) {
        break missingId;
      }

      id = R.id.til_event_location;
      TextInputLayout tilEventLocation = ViewBindings.findChildViewById(rootView, id);
      if (tilEventLocation == null) {
        break missingId;
      }

      id = R.id.til_event_name;
      TextInputLayout tilEventName = ViewBindings.findChildViewById(rootView, id);
      if (tilEventName == null) {
        break missingId;
      }

      id = R.id.til_max_participants;
      TextInputLayout tilMaxParticipants = ViewBindings.findChildViewById(rootView, id);
      if (tilMaxParticipants == null) {
        break missingId;
      }

      return new ActivityCreateEventBinding((ConstraintLayout) rootView, createEventRoot,
          eventDateEdit, eventDescriptionEdit, eventLocationEdit, eventNameEdit,
          maxParticipantsEdit, submitEventButton, tagsContainer, tilEventDate, tilEventDescription,
          tilEventLocation, tilEventName, tilMaxParticipants);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
